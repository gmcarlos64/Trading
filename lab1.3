# Remover todos los objetos del "Environment"
rm(list = ls())
options("scipen"=100, "digits"=4)

suppressMessages(library(plotly)) # Graficas interactivas
suppressMessages(library(Quandl)) # Descargar Precios
suppressMessages(library(PortfolioAnalytics)) # Teor?a Moderna de Portafolios
suppressMessages(library(ROI)) # Optimizacion para portafolio
suppressMessages(library(knitr))  # Opciones de documentaci?n + c?digo
suppressMessages(library(kableExtra)) # Tablas en HTML

options(knitr.table.format = "html")

# Cargar el token de QUANDL
Quandl.api_key("gs9s3mNF22osh3Phkdet")
Capital_Inicial <- 10000

# Funcion para descagar precios
Bajar_Precios <- function(Columns, Tickers, Fecha_In, Fecha_Fn) {
  
  # Funcion para descargar N cantidad de activos desde QUANDL
  # -- Dependencias: QUANDL
  # -- Columns : columnas a incluir : character : c("date", "adj_close", ... )
  # -- Tickers : Tickers o claves de pizarra de los activos : character : "TSLA"
  00# -- Fecha_In : Fecha Inicial : character : "2017-01-02"
  # -- Fecha_Fn : Fecha Final : character : "2017-08-02"
  
  # Peticion para descargar precios
  Datos <- Quandl.datatable("WIKI/PRICES", qopts.columns=Columns, ticker=Tickers,
                            date.gte=Fecha_In, date.lte=Fecha_Fn)
  return(Datos)
}

# Tickers de acciones contenidas en ETF-SPY
Datos_ETF1 <- read.csv("C:/Users/Valen/Desktop/IVV_holdings_1.csv",i,".csv" header=FALSE)

tk <- as.character(na.omit(Datos_ETF1[which(Datos_ETF1[,1] == "Ticker")+1:length(Datos_ETF1[,1]),1]))
cs <- c("date", "adj_close")
pr <- as.numeric(na.omit(Datos_ETF1[wich(Datos_ETF1[,5] == "Price")+1:length(Datos_ETF1[,5]),5]))
w  <- as.percentage(na.omit(Datos_ETF1[wich(Datos_ETF1[,4] == "Weight (%)")+1:length(Datos_ETF[,4]),4]))
s  <- as.numeric(na.omit(Datos_ETF1[wich(Datos_ETF1[,6] == "Shares")+1:lenght(Datos_ETF1[,6]),6]))
np <- c(1:12)
Vport[i] <-c((pr[i]*s[i])+(pr[i+1]*s[i+1]))
######
datos_1 <- list()
for (i:length(tk))
  datos_1[[i]] <- Bajar_Precios(Columns=cs, Ticker=tk[i], Fecha_In=fs[1], Fecha_Fn=fs[2])

names(Datos) <- tk

for(i in 1:length(np))
  datos_1[[i]]$Vport <- c(0, diff(log(datos_1[[i]]$Vport)))

Rends <- xts(x = cbind(Vport[i]),
             order.by = datos_1[[1]]$date)[-1]
names(Rends) <- tk